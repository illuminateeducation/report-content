define('chart1',[], function ($, chart1) {

  return function (instanceData) {

    function onlyUnique(value, index, self) { 
      return self.indexOf(value) === index;
    }

    var sites = [];
    var myData = [];

    // {
    //   site: "",
    //   countAtAboveGradeLevel1: 0,
    //   countBelowGradeLevel1: 0,
    //   countAtAboveGradeLevel2: 0,
    //   countBelowGradeLevel2: 0
    // }

    for (var i = 0; i < instanceData.series[0].length; i++){
      if (instanceData.series[0][i].site1 != null){
        sites.push(instanceData.series[0][i].site1);
        sites = sites.filter(onlyUnique);
      }
    }

    console.log(`My Sites: ${sites}`);

    //Create an object for each site    
      sites.forEach((el, i)=>{
        myData.push(
          {
            site: el,
            countAtAboveGradeLevel1: 0,
            countBelowGradeLevel1: 0,
            countAtAboveGradeLevel2: 0,
            countBelowGradeLevel2: 0
          }
        )
      });

    for (var i = 0; i < instanceData.series[0].length; i++){

      myData.forEach((el, index)=>{
        if (el.site === instanceData.series[0][i].site1) {
          
          if (instanceData.series[0][i].gradeEquivalentStatus1 === 'Above Grade Level' 
                || instanceData.series[0][i].gradeEquivalentStatus1 === 'At Grade Level'){
            el.countAtAboveGradeLevel1 += 1;
          }

          if (instanceData.series[0][i].gradeEquivalentStatus1 === 'Below Grade Level'){
            el.countBelowGradeLevel1 += 1;
          }
        }
      });

      myData.forEach((el, index)=>{
        if (el.site === instanceData.series[0][i].site2) {

          if (instanceData.series[0][i].gradeEquivalentStatus2 === 'Above Grade Level' 
                || instanceData.series[0][i].gradeEquivalentStatus2 === 'At Grade Level'){
            el.countAtAboveGradeLevel2 += 1;
          }

          if (instanceData.series[0][i].gradeEquivalentStatus2 === 'Below Grade Level'){
            el.countBelowGradeLevel2 += 1;
          }

        }
      });

    }

    myData.forEach((el) => {
      console.log('myData:');
      console.log(el);
    });

    mySeries1Data = [];

    myData.forEach((el) => {
        mySeries1Data.push([
          el.site,
          (el.countAtAboveGradeLevel1/(el.countAtAboveGradeLevel1+el.countBelowGradeLevel1))*100
        ]);
      }
    );

    mySeries2Data = [];

    myData.forEach((el) => {
        mySeries2Data.push([
          el.site,
          (el.countAtAboveGradeLevel2/(el.countAtAboveGradeLevel2+el.countBelowGradeLevel2))*100
        ]);
      }
    );


// Create the chart

  var config = {
    

      chart: {
            renderTo: instanceData.id, 
            backgroundColor: null,
            borderWidth: 0,
            shadow: {
              color: '#C9C9C9',
              offsetX: 0,
              offsetY: 0,
              width: 2
            },
            type: 'column',
            width: instanceData.width,
            height: instanceData.height,
            spacing: [50,30,30,10]
      },
      credits: {
        enabled: false
      },
      title: {
        text: ''
      },
      plotOptions: {
        column: {
          dataLabels: {
            enabled: true,
            format: '{point.y:.1f}%'
          }

        }
      },
      series: [
        //Series1
          {
            type: "column",
            data: mySeries1Data,
            color: '#72B6ED',
            name: instanceData.series[0][0].admin1
          },
          {
            type: "column",
            data: mySeries2Data,
            color: '#A884CB',
            name: instanceData.series[0][0].admin2
          }
      ], // Closes Series Array
      tooltip: {
        pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}: <br><b>{point.y:.1f} %</b><br/><b></b><br>'
      },
      xAxis: {
        type: "category",
      },
      yAxis: {
        title: {
          text: "% of Students"
        }
      }
      

  } // Closes Config Object

//Render Chart
new Highcharts.Chart(config);
        
  }; //closes return function
        
});  //closes top function

;
